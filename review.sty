%------------------------------------------------------------------------------
%
% This is the 'review' package
% 
% Copyrright (c) 2021 Christian Krieg <christian@drkrieg.at>
%
% This program can be redistributed and/or modified under the terms
% of the LaTeX Project Public License Distributed from CTAN archives
% in directory macros/latex/base/lppl.txt.
% 
% Command to set up three commands for doing a review, based on the
% 'todonotes' package. 'newtodo' takes two arguments:
%
% 1: Author name (one word, all lowercase)
% 2: Color (understandable by the xcolor package)
% 3: Additional options for \todo command
%
% The command defines three commands based on the arguments:
%
%     \<name>[todo-args]{todotext}
%         Place a TODO note at margin
%     \<name>hl[todo-args]{hl-text}{todotext}
%         Place a TODO note at margin, highlighting text given as
%         first argument
%
% Parameters to the \todo command can still be passed as optional
% arguments; So, if you like to insert an inline TODO note, you
% can do so like in the following example:
%
%   [...]
%
%   % 'pkg-opts' are passed to the underlying 'todonotes' package
%   \usepackage[pkg-opts]{review}
%
%   [...]
%   \begin{document}
    % Define reviewer; 'opts' are passed to underlying \todo command
%   \reviewer[opts]{john}{blue}
%   [...]
%
%
    % Then use it in the text
%   This is an example text\john{A nice text} \johnhl{worth reading}{ready for
%   your enjoyment}. We show how to make a \john[inline]{review comment inline},
%   which also work for the \johnhl[inline]{hilighted}{highlighted} version.
%
%   [...]
%
%------------------------------------------------------------------------------
%
\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{review}
  [2021/05/03 v0.01 LaTeX package to define makros for multi-reviewer reviews]
%
%------------------------------------------------------------------------------
%
% We pass all package options to the todonotes package, so we don't want to
% process them here. We define an empty default procedure for specified but 
% undefined options, and stop to process options.
%
\DeclareOption*{}
\ProcessOptions\relax
%
%------------------------------------------------------------------------------
%
\RequirePackage[
    colorinlistoftodos,
    prependcaption,
    textsize=footnotesize,
    textwidth=1.75cm,
    \@nameuse{opt@review.sty}, % This passes the 'review' package options
]{todonotes}
\RequirePackage{setspace}
\RequirePackage{soul}
\RequirePackage{xstring}
%
%------------------------------------------------------------------------------
%
\newcommand{\reviewer}[3][]{%
%
    % Define TODO note
    % Back links from: Andreas Plank, 'todonotes' manual, v1.1.2, p. 16
    \expandafter\newcommand\csname #2\endcsname[2][]{%
%        \todoTrans[
        \todonum[
            color=#3,
            backgroundcolor=#3!25,
            bordercolor=#3!50,
            linecolor=#3!50,
            tickmarkheight = 1em,
            author={\textbf{\expandafter\MakeUppercase #2}},
            caption={\protect\hypertarget{todo\thetodocounter}{(\thetodocounter) \expandafter\MakeUppercase #2}},
            noprepend,
            fancyline,
            #1,
            ##1,
        ]{%
            \setstretch{1}##2\hfill%
            \hyperlink{todo\thetodocounter}{$\uparrow$}%
        }%
    }%
    % Define highlighting TODO note. Only print the selected text as-is if todo
    % notes are disabled globally by the 'disable' package option
    \if@todonotes@disabled%
        \expandafter\newcommand\csname #2hl\endcsname[3][]{##2}%
    \else%
        \expandafter\newcommand\csname #2hl\endcsname[3][]{%
            % We are checking here whether in reviewer options, or local option
            % contains "disable". If so, don't highlight the selected text, but
            % print it as-is. The todonote is is hidden because the options are
            % passed on to the underlying \todo command
            \IfSubStr{##1}{disable}{##2}{%
                \IfSubStr{#1}{disable}{##2}{\hl{##2}}%
            }%
        \csname#2\endcsname[##1]{##3}}%
    \fi%
}

% From: The 'todonotes' manual, v1.1.2, p. 13
\newcounter{todocounter}
\newcommand{\todonum}[2][]{%
    \stepcounter{todocounter}\todo[#1]{(\thetodocounter) #2}%
}

% From: Andreas Plank, 'todonotes' manual, v1.1.2, p. 16
% Define a counter for the inserted todonotes.
%\newcounter{todoListItems}
%\newcommand{\todoTrans}[2][]{%
%    % Increment counter
%    \addtocounter{todoListItems}{1}%
%    \todonum[%
%        caption={\protect\hypertarget{todo\thetodoListItems}{}Translation}, #1
%    ]{%
%        #2 \hfill
%        \hyperlink{todo\thetodoListItems}{$\uparrow$}
%    }%
%}
%
%------------------------------------------------------------------------------
%
\endinput
%
%------------------------------------------------------------------------------
